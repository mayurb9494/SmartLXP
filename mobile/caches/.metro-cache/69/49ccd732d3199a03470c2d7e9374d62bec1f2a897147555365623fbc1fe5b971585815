{"dependencies":[{"name":"./conversions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":42,"index":42}}],"key":"AUDPhSp3SCRpotk+n4dj5MLm8fk=","exportNames":["*"],"imports":1}},{"name":"./route","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":12,"index":56},"end":{"line":2,"column":30,"index":74}}],"key":"CgLF7khkD2MDURiduSWr++dKYzw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var conversions = require(_dependencyMap[0], \"./conversions\");\n  var route = require(_dependencyMap[1], \"./route\");\n  var convert = {};\n  var models = Object.keys(conversions);\n  function wrapRaw(fn) {\n    var wrappedFn = function (args) {\n      if (args === undefined || args === null) {\n        return args;\n      }\n      if (arguments.length > 1) {\n        args = Array.prototype.slice.call(arguments);\n      }\n      return fn(args);\n    };\n\n    // preserve .conversion property if there is one\n    if ('conversion' in fn) {\n      wrappedFn.conversion = fn.conversion;\n    }\n    return wrappedFn;\n  }\n  function wrapRounded(fn) {\n    var wrappedFn = function (args) {\n      if (args === undefined || args === null) {\n        return args;\n      }\n      if (arguments.length > 1) {\n        args = Array.prototype.slice.call(arguments);\n      }\n      var result = fn(args);\n\n      // we're assuming the result is an array here.\n      // see notice in conversions.js; don't use box types\n      // in conversion functions.\n      if (typeof result === 'object') {\n        for (var len = result.length, i = 0; i < len; i++) {\n          result[i] = Math.round(result[i]);\n        }\n      }\n      return result;\n    };\n\n    // preserve .conversion property if there is one\n    if ('conversion' in fn) {\n      wrappedFn.conversion = fn.conversion;\n    }\n    return wrappedFn;\n  }\n  models.forEach(function (fromModel) {\n    convert[fromModel] = {};\n    Object.defineProperty(convert[fromModel], 'channels', {\n      value: conversions[fromModel].channels\n    });\n    Object.defineProperty(convert[fromModel], 'labels', {\n      value: conversions[fromModel].labels\n    });\n    var routes = route(fromModel);\n    var routeModels = Object.keys(routes);\n    routeModels.forEach(function (toModel) {\n      var fn = routes[toModel];\n      convert[fromModel][toModel] = wrapRounded(fn);\n      convert[fromModel][toModel].raw = wrapRaw(fn);\n    });\n  });\n  module.exports = convert;\n});","lineCount":67,"map":[[2,2,1,0],[2,6,1,4,"conversions"],[2,17,1,15],[2,20,1,18,"require"],[2,27,1,25],[2,28,1,25,"_dependencyMap"],[2,42,1,25],[2,62,1,41],[2,63,1,42],[3,2,2,0],[3,6,2,4,"route"],[3,11,2,9],[3,14,2,12,"require"],[3,21,2,19],[3,22,2,19,"_dependencyMap"],[3,36,2,19],[3,50,2,29],[3,51,2,30],[4,2,4,0],[4,6,4,4,"convert"],[4,13,4,11],[4,16,4,14],[4,17,4,15],[4,18,4,16],[5,2,6,0],[5,6,6,4,"models"],[5,12,6,10],[5,15,6,13,"Object"],[5,21,6,19],[5,22,6,20,"keys"],[5,26,6,24],[5,27,6,25,"conversions"],[5,38,6,36],[5,39,6,37],[6,2,8,0],[6,11,8,9,"wrapRaw"],[6,18,8,16,"wrapRaw"],[6,19,8,17,"fn"],[6,21,8,19],[6,23,8,21],[7,4,9,1],[7,8,9,5,"wrappedFn"],[7,17,9,14],[7,20,9,17],[7,29,9,17,"wrappedFn"],[7,30,9,27,"args"],[7,34,9,31],[7,36,9,33],[8,6,10,2],[8,10,10,6,"args"],[8,14,10,10],[8,19,10,15,"undefined"],[8,28,10,24],[8,32,10,28,"args"],[8,36,10,32],[8,41,10,37],[8,45,10,41],[8,47,10,43],[9,8,11,3],[9,15,11,10,"args"],[9,19,11,14],[10,6,12,2],[11,6,14,2],[11,10,14,6,"arguments"],[11,19,14,15],[11,20,14,16,"length"],[11,26,14,22],[11,29,14,25],[11,30,14,26],[11,32,14,28],[12,8,15,3,"args"],[12,12,15,7],[12,15,15,10,"Array"],[12,20,15,15],[12,21,15,16,"prototype"],[12,30,15,25],[12,31,15,26,"slice"],[12,36,15,31],[12,37,15,32,"call"],[12,41,15,36],[12,42,15,37,"arguments"],[12,51,15,46],[12,52,15,47],[13,6,16,2],[14,6,18,2],[14,13,18,9,"fn"],[14,15,18,11],[14,16,18,12,"args"],[14,20,18,16],[14,21,18,17],[15,4,19,1],[15,5,19,2],[17,4,21,1],[18,4,22,1],[18,8,22,5],[18,20,22,17],[18,24,22,21,"fn"],[18,26,22,23],[18,28,22,25],[19,6,23,2,"wrappedFn"],[19,15,23,11],[19,16,23,12,"conversion"],[19,26,23,22],[19,29,23,25,"fn"],[19,31,23,27],[19,32,23,28,"conversion"],[19,42,23,38],[20,4,24,1],[21,4,26,1],[21,11,26,8,"wrappedFn"],[21,20,26,17],[22,2,27,0],[23,2,29,0],[23,11,29,9,"wrapRounded"],[23,22,29,20,"wrapRounded"],[23,23,29,21,"fn"],[23,25,29,23],[23,27,29,25],[24,4,30,1],[24,8,30,5,"wrappedFn"],[24,17,30,14],[24,20,30,17],[24,29,30,17,"wrappedFn"],[24,30,30,27,"args"],[24,34,30,31],[24,36,30,33],[25,6,31,2],[25,10,31,6,"args"],[25,14,31,10],[25,19,31,15,"undefined"],[25,28,31,24],[25,32,31,28,"args"],[25,36,31,32],[25,41,31,37],[25,45,31,41],[25,47,31,43],[26,8,32,3],[26,15,32,10,"args"],[26,19,32,14],[27,6,33,2],[28,6,35,2],[28,10,35,6,"arguments"],[28,19,35,15],[28,20,35,16,"length"],[28,26,35,22],[28,29,35,25],[28,30,35,26],[28,32,35,28],[29,8,36,3,"args"],[29,12,36,7],[29,15,36,10,"Array"],[29,20,36,15],[29,21,36,16,"prototype"],[29,30,36,25],[29,31,36,26,"slice"],[29,36,36,31],[29,37,36,32,"call"],[29,41,36,36],[29,42,36,37,"arguments"],[29,51,36,46],[29,52,36,47],[30,6,37,2],[31,6,39,2],[31,10,39,6,"result"],[31,16,39,12],[31,19,39,15,"fn"],[31,21,39,17],[31,22,39,18,"args"],[31,26,39,22],[31,27,39,23],[33,6,41,2],[34,6,42,2],[35,6,43,2],[36,6,44,2],[36,10,44,6],[36,17,44,13,"result"],[36,23,44,19],[36,28,44,24],[36,36,44,32],[36,38,44,34],[37,8,45,3],[37,13,45,8],[37,17,45,12,"len"],[37,20,45,15],[37,23,45,18,"result"],[37,29,45,24],[37,30,45,25,"length"],[37,36,45,31],[37,38,45,33,"i"],[37,39,45,34],[37,42,45,37],[37,43,45,38],[37,45,45,40,"i"],[37,46,45,41],[37,49,45,44,"len"],[37,52,45,47],[37,54,45,49,"i"],[37,55,45,50],[37,57,45,52],[37,59,45,54],[38,10,46,4,"result"],[38,16,46,10],[38,17,46,11,"i"],[38,18,46,12],[38,19,46,13],[38,22,46,16,"Math"],[38,26,46,20],[38,27,46,21,"round"],[38,32,46,26],[38,33,46,27,"result"],[38,39,46,33],[38,40,46,34,"i"],[38,41,46,35],[38,42,46,36],[38,43,46,37],[39,8,47,3],[40,6,48,2],[41,6,50,2],[41,13,50,9,"result"],[41,19,50,15],[42,4,51,1],[42,5,51,2],[44,4,53,1],[45,4,54,1],[45,8,54,5],[45,20,54,17],[45,24,54,21,"fn"],[45,26,54,23],[45,28,54,25],[46,6,55,2,"wrappedFn"],[46,15,55,11],[46,16,55,12,"conversion"],[46,26,55,22],[46,29,55,25,"fn"],[46,31,55,27],[46,32,55,28,"conversion"],[46,42,55,38],[47,4,56,1],[48,4,58,1],[48,11,58,8,"wrappedFn"],[48,20,58,17],[49,2,59,0],[50,2,61,0,"models"],[50,8,61,6],[50,9,61,7,"forEach"],[50,16,61,14],[50,17,61,15],[50,27,61,25,"fromModel"],[50,36,61,34],[50,38,61,36],[51,4,62,1,"convert"],[51,11,62,8],[51,12,62,9,"fromModel"],[51,21,62,18],[51,22,62,19],[51,25,62,22],[51,26,62,23],[51,27,62,24],[52,4,64,1,"Object"],[52,10,64,7],[52,11,64,8,"defineProperty"],[52,25,64,22],[52,26,64,23,"convert"],[52,33,64,30],[52,34,64,31,"fromModel"],[52,43,64,40],[52,44,64,41],[52,46,64,43],[52,56,64,53],[52,58,64,55],[53,6,64,56,"value"],[53,11,64,61],[53,13,64,63,"conversions"],[53,24,64,74],[53,25,64,75,"fromModel"],[53,34,64,84],[53,35,64,85],[53,36,64,86,"channels"],[54,4,64,94],[54,5,64,95],[54,6,64,96],[55,4,65,1,"Object"],[55,10,65,7],[55,11,65,8,"defineProperty"],[55,25,65,22],[55,26,65,23,"convert"],[55,33,65,30],[55,34,65,31,"fromModel"],[55,43,65,40],[55,44,65,41],[55,46,65,43],[55,54,65,51],[55,56,65,53],[56,6,65,54,"value"],[56,11,65,59],[56,13,65,61,"conversions"],[56,24,65,72],[56,25,65,73,"fromModel"],[56,34,65,82],[56,35,65,83],[56,36,65,84,"labels"],[57,4,65,90],[57,5,65,91],[57,6,65,92],[58,4,67,1],[58,8,67,5,"routes"],[58,14,67,11],[58,17,67,14,"route"],[58,22,67,19],[58,23,67,20,"fromModel"],[58,32,67,29],[58,33,67,30],[59,4,68,1],[59,8,68,5,"routeModels"],[59,19,68,16],[59,22,68,19,"Object"],[59,28,68,25],[59,29,68,26,"keys"],[59,33,68,30],[59,34,68,31,"routes"],[59,40,68,37],[59,41,68,38],[60,4,70,1,"routeModels"],[60,15,70,12],[60,16,70,13,"forEach"],[60,23,70,20],[60,24,70,21],[60,34,70,31,"toModel"],[60,41,70,38],[60,43,70,40],[61,6,71,2],[61,10,71,6,"fn"],[61,12,71,8],[61,15,71,11,"routes"],[61,21,71,17],[61,22,71,18,"toModel"],[61,29,71,25],[61,30,71,26],[62,6,73,2,"convert"],[62,13,73,9],[62,14,73,10,"fromModel"],[62,23,73,19],[62,24,73,20],[62,25,73,21,"toModel"],[62,32,73,28],[62,33,73,29],[62,36,73,32,"wrapRounded"],[62,47,73,43],[62,48,73,44,"fn"],[62,50,73,46],[62,51,73,47],[63,6,74,2,"convert"],[63,13,74,9],[63,14,74,10,"fromModel"],[63,23,74,19],[63,24,74,20],[63,25,74,21,"toModel"],[63,32,74,28],[63,33,74,29],[63,34,74,30,"raw"],[63,37,74,33],[63,40,74,36,"wrapRaw"],[63,47,74,43],[63,48,74,44,"fn"],[63,50,74,46],[63,51,74,47],[64,4,75,1],[64,5,75,2],[64,6,75,3],[65,2,76,0],[65,3,76,1],[65,4,76,2],[66,2,78,0,"module"],[66,8,78,6],[66,9,78,7,"exports"],[66,16,78,14],[66,19,78,17,"convert"],[66,26,78,24],[67,0,78,25],[67,3]],"functionMap":{"names":["<global>","wrapRaw","wrappedFn","wrapRounded","models.forEach$argument_0","routeModels.forEach$argument_0"],"mappings":"AAA;ACO;iBCC;EDU;CDQ;AGE;iBDC;ECqB;CHQ;eIE;qBCS;EDK;CJC"},"hasCjsExports":true},"type":"js/module"}]}