{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"color","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":26,"index":68}}],"key":"WMoKxUKO/GMHeED0pzSR/dc1v7c=","exportNames":["*"],"imports":1}},{"name":"./themes/v2/DarkTheme","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":53,"index":123}}],"key":"43Ph1iaaqvHA5W8CZ1o4iUlNnfU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return overlay;\n    }\n  });\n  Object.defineProperty(exports, \"isAnimatedValue\", {\n    enumerable: true,\n    get: function () {\n      return isAnimatedValue;\n    }\n  });\n  var _reactNative = require(_dependencyMap[0], \"react-native\");\n  var _color = require(_dependencyMap[1], \"color\");\n  var color = _interopDefault(_color);\n  var _themesV2DarkTheme = require(_dependencyMap[2], \"./themes/v2/DarkTheme\");\n  var isAnimatedValue = it => it instanceof _reactNative.Animated.Value;\n  function overlay(elevation) {\n    var surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _themesV2DarkTheme.MD2DarkTheme.colors?.surface;\n    if (isAnimatedValue(elevation)) {\n      var inputRange = [0, 1, 2, 3, 8, 24];\n\n      // @ts-expect-error: TS doesn't seem to refine the type correctly\n      return elevation.interpolate({\n        inputRange,\n        outputRange: inputRange.map(elevation => {\n          return calculateColor(surfaceColor, elevation);\n        })\n      });\n    }\n\n    // @ts-expect-error: TS doesn't seem to refine the type correctly\n    return calculateColor(surfaceColor, elevation);\n  }\n  function calculateColor(surfaceColor) {\n    var elevation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var overlayTransparency;\n    if (elevation >= 1 && elevation <= 24) {\n      overlayTransparency = elevationOverlayTransparency[elevation];\n    } else if (elevation > 24) {\n      overlayTransparency = elevationOverlayTransparency[24];\n    } else {\n      overlayTransparency = elevationOverlayTransparency[1];\n    }\n    return (0, color.default)(surfaceColor).mix((0, color.default)('white'), overlayTransparency * 0.01).hex();\n  }\n  var elevationOverlayTransparency = {\n    1: 5,\n    2: 7,\n    3: 8,\n    4: 9,\n    5: 10,\n    6: 11,\n    7: 11.5,\n    8: 12,\n    9: 12.5,\n    10: 13,\n    11: 13.5,\n    12: 14,\n    13: 14.25,\n    14: 14.5,\n    15: 14.75,\n    16: 15,\n    17: 15.12,\n    18: 15.24,\n    19: 15.36,\n    20: 15.48,\n    21: 15.6,\n    22: 15.72,\n    23: 15.84,\n    24: 16\n  };\n});","lineCount":84,"map":[[12,2,11,15,"Object"],[12,8,11,15],[12,9,11,15,"defineProperty"],[12,23,11,15],[12,24,11,15,"exports"],[12,31,11,15],[13,4,11,15,"enumerable"],[13,14,11,15],[14,4,11,15,"get"],[14,7,11,15],[14,18,11,15,"get"],[14,19,11,15],[15,6,11,15],[15,13,11,15,"overlay"],[15,20,11,15],[16,4,11,15],[17,2,11,15],[18,2,7,0,"Object"],[18,8,7,0],[18,9,7,0,"defineProperty"],[18,23,7,0],[18,24,7,0,"exports"],[18,31,7,0],[19,4,7,0,"enumerable"],[19,14,7,0],[20,4,7,0,"get"],[20,7,7,0],[20,18,7,0,"get"],[20,19,7,0],[21,6,7,0],[21,13,7,0,"isAnimatedValue"],[21,28,7,0],[22,4,7,0],[23,2,7,0],[24,2,1,0],[24,6,1,0,"_reactNative"],[24,18,1,0],[24,21,1,0,"require"],[24,28,1,0],[24,29,1,0,"_dependencyMap"],[24,43,1,0],[25,2,3,0],[25,6,3,0,"_color"],[25,12,3,0],[25,15,3,0,"require"],[25,22,3,0],[25,23,3,0,"_dependencyMap"],[25,37,3,0],[26,2,3,0],[26,6,3,0,"color"],[26,11,3,0],[26,14,3,0,"_interopDefault"],[26,29,3,0],[26,30,3,0,"_color"],[26,36,3,0],[27,2,5,0],[27,6,5,0,"_themesV2DarkTheme"],[27,24,5,0],[27,27,5,0,"require"],[27,34,5,0],[27,35,5,0,"_dependencyMap"],[27,49,5,0],[28,2,7,7],[28,6,7,13,"isAnimatedValue"],[28,21,7,28],[28,24,8,2,"it"],[28,26,8,71],[28,30,9,27,"it"],[28,32,9,29],[28,44,9,41,"Animated"],[28,56,9,49],[28,57,9,49,"Animated"],[28,65,9,49],[28,66,9,50,"Value"],[28,71,9,55],[29,2,11,15],[29,11,11,24,"overlay"],[29,18,11,31,"overlay"],[29,19,12,2,"elevation"],[29,28,12,14],[29,30,14,79],[30,4,14,79],[30,8,13,2,"surfaceColor"],[30,20,13,22],[30,23,13,22,"arguments"],[30,32,13,22],[30,33,13,22,"length"],[30,39,13,22],[30,47,13,22,"arguments"],[30,56,13,22],[30,64,13,22,"undefined"],[30,73,13,22],[30,76,13,22,"arguments"],[30,85,13,22],[30,91,13,25,"MD2DarkTheme"],[30,109,13,37],[30,110,13,37,"MD2DarkTheme"],[30,122,13,37],[30,123,13,38,"colors"],[30,129,13,44],[30,131,13,46,"surface"],[30,138,13,53],[31,4,15,2],[31,8,15,6,"isAnimatedValue"],[31,23,15,21],[31,24,15,22,"elevation"],[31,33,15,31],[31,34,15,32],[31,36,15,34],[32,6,16,4],[32,10,16,10,"inputRange"],[32,20,16,20],[32,23,16,23],[32,24,16,24],[32,25,16,25],[32,27,16,27],[32,28,16,28],[32,30,16,30],[32,31,16,31],[32,33,16,33],[32,34,16,34],[32,36,16,36],[32,37,16,37],[32,39,16,39],[32,41,16,41],[32,42,16,42],[34,6,18,4],[35,6,19,4],[35,13,19,11,"elevation"],[35,22,19,20],[35,23,19,21,"interpolate"],[35,34,19,32],[35,35,19,33],[36,8,20,6,"inputRange"],[36,18,20,16],[37,8,21,6,"outputRange"],[37,19,21,17],[37,21,21,19,"inputRange"],[37,31,21,29],[37,32,21,30,"map"],[37,35,21,33],[37,36,21,35,"elevation"],[37,45,21,44],[37,49,21,49],[38,10,22,8],[38,17,22,15,"calculateColor"],[38,31,22,29],[38,32,22,30,"surfaceColor"],[38,44,22,42],[38,46,22,44,"elevation"],[38,55,22,53],[38,56,22,54],[39,8,23,6],[39,9,23,7],[40,6,24,4],[40,7,24,5],[40,8,24,6],[41,4,25,2],[43,4,27,2],[44,4,28,2],[44,11,28,9,"calculateColor"],[44,25,28,23],[44,26,28,24,"surfaceColor"],[44,38,28,36],[44,40,28,38,"elevation"],[44,49,28,47],[44,50,28,48],[45,2,29,0],[46,2,31,0],[46,11,31,9,"calculateColor"],[46,25,31,23,"calculateColor"],[46,26,31,24,"surfaceColor"],[46,38,31,44],[46,40,31,69],[47,4,31,69],[47,8,31,46,"elevation"],[47,17,31,63],[47,20,31,63,"arguments"],[47,29,31,63],[47,30,31,63,"length"],[47,36,31,63],[47,44,31,63,"arguments"],[47,53,31,63],[47,61,31,63,"undefined"],[47,70,31,63],[47,73,31,63,"arguments"],[47,82,31,63],[47,88,31,66],[47,89,31,67],[48,4,32,2],[48,8,32,6,"overlayTransparency"],[48,27,32,33],[49,4,33,2],[49,8,33,6,"elevation"],[49,17,33,15],[49,21,33,19],[49,22,33,20],[49,26,33,24,"elevation"],[49,35,33,33],[49,39,33,37],[49,41,33,39],[49,43,33,41],[50,6,34,4,"overlayTransparency"],[50,25,34,23],[50,28,34,26,"elevationOverlayTransparency"],[50,56,34,54],[50,57,34,55,"elevation"],[50,66,34,64],[50,67,34,65],[51,4,35,2],[51,5,35,3],[51,11,35,9],[51,15,35,13,"elevation"],[51,24,35,22],[51,27,35,25],[51,29,35,27],[51,31,35,29],[52,6,36,4,"overlayTransparency"],[52,25,36,23],[52,28,36,26,"elevationOverlayTransparency"],[52,56,36,54],[52,57,36,55],[52,59,36,57],[52,60,36,58],[53,4,37,2],[53,5,37,3],[53,11,37,9],[54,6,38,4,"overlayTransparency"],[54,25,38,23],[54,28,38,26,"elevationOverlayTransparency"],[54,56,38,54],[54,57,38,55],[54,58,38,56],[54,59,38,57],[55,4,39,2],[56,4,40,2],[56,11,40,9],[56,15,40,9,"color"],[56,20,40,14],[56,21,40,14,"default"],[56,28,40,14],[56,30,40,15,"surfaceColor"],[56,42,40,27],[56,43,40,28],[56,44,41,5,"mix"],[56,47,41,8],[56,48,41,9],[56,52,41,9,"color"],[56,57,41,14],[56,58,41,14,"default"],[56,65,41,14],[56,67,41,15],[56,74,41,22],[56,75,41,23],[56,77,41,25,"overlayTransparency"],[56,96,41,44],[56,99,41,47],[56,103,41,51],[56,104,41,52],[56,105,42,5,"hex"],[56,108,42,8],[56,109,42,9],[56,110,42,10],[57,2,43,0],[58,2,45,0],[58,6,45,6,"elevationOverlayTransparency"],[58,34,45,58],[58,37,45,61],[59,4,46,2],[59,5,46,3],[59,7,46,5],[59,8,46,6],[60,4,47,2],[60,5,47,3],[60,7,47,5],[60,8,47,6],[61,4,48,2],[61,5,48,3],[61,7,48,5],[61,8,48,6],[62,4,49,2],[62,5,49,3],[62,7,49,5],[62,8,49,6],[63,4,50,2],[63,5,50,3],[63,7,50,5],[63,9,50,7],[64,4,51,2],[64,5,51,3],[64,7,51,5],[64,9,51,7],[65,4,52,2],[65,5,52,3],[65,7,52,5],[65,11,52,9],[66,4,53,2],[66,5,53,3],[66,7,53,5],[66,9,53,7],[67,4,54,2],[67,5,54,3],[67,7,54,5],[67,11,54,9],[68,4,55,2],[68,6,55,4],[68,8,55,6],[68,10,55,8],[69,4,56,2],[69,6,56,4],[69,8,56,6],[69,12,56,10],[70,4,57,2],[70,6,57,4],[70,8,57,6],[70,10,57,8],[71,4,58,2],[71,6,58,4],[71,8,58,6],[71,13,58,11],[72,4,59,2],[72,6,59,4],[72,8,59,6],[72,12,59,10],[73,4,60,2],[73,6,60,4],[73,8,60,6],[73,13,60,11],[74,4,61,2],[74,6,61,4],[74,8,61,6],[74,10,61,8],[75,4,62,2],[75,6,62,4],[75,8,62,6],[75,13,62,11],[76,4,63,2],[76,6,63,4],[76,8,63,6],[76,13,63,11],[77,4,64,2],[77,6,64,4],[77,8,64,6],[77,13,64,11],[78,4,65,2],[78,6,65,4],[78,8,65,6],[78,13,65,11],[79,4,66,2],[79,6,66,4],[79,8,66,6],[79,12,66,10],[80,4,67,2],[80,6,67,4],[80,8,67,6],[80,13,67,11],[81,4,68,2],[81,6,68,4],[81,8,68,6],[81,13,68,11],[82,4,69,2],[82,6,69,4],[82,8,69,6],[83,2,70,0],[83,3,70,1],[84,0,70,2],[84,3]],"functionMap":{"names":["<global>","isAnimatedValue","overlay","inputRange.map$argument_0","calculateColor"],"mappings":"AAA;+BCM;uDDE;eEE;kCCU;ODE;CFM;AIE;CJY"},"hasCjsExports":false},"type":"js/module"}]}