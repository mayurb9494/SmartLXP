{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  (function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.deepmerge = factory());\n  })(this, function () {\n    'use strict';\n\n    var isMergeableObject = function isMergeableObject(value) {\n      return isNonNullObject(value) && !isSpecial(value);\n    };\n    function isNonNullObject(value) {\n      return !!value && typeof value === 'object';\n    }\n    function isSpecial(value) {\n      var stringValue = Object.prototype.toString.call(value);\n      return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n    }\n\n    // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n    var canUseSymbol = typeof Symbol === 'function' && Symbol.for;\n    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n    function isReactElement(value) {\n      return value.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    function emptyTarget(val) {\n      return Array.isArray(val) ? [] : {};\n    }\n    function cloneUnlessOtherwiseSpecified(value, options) {\n      return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n    }\n    function defaultArrayMerge(target, source, options) {\n      return target.concat(source).map(function (element) {\n        return cloneUnlessOtherwiseSpecified(element, options);\n      });\n    }\n    function getMergeFunction(key, options) {\n      if (!options.customMerge) {\n        return deepmerge;\n      }\n      var customMerge = options.customMerge(key);\n      return typeof customMerge === 'function' ? customMerge : deepmerge;\n    }\n    function getEnumerableOwnPropertySymbols(target) {\n      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n        return target.propertyIsEnumerable(symbol);\n      }) : [];\n    }\n    function getKeys(target) {\n      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n    }\n    function mergeObject(target, source, options) {\n      var destination = {};\n      if (options.isMergeableObject(target)) {\n        getKeys(target).forEach(function (key) {\n          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n        });\n      }\n      getKeys(source).forEach(function (key) {\n        if (!options.isMergeableObject(source[key]) || !target[key]) {\n          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n        } else {\n          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n        }\n      });\n      return destination;\n    }\n    function deepmerge(target, source, options) {\n      options = options || {};\n      options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n      options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n      var sourceIsArray = Array.isArray(source);\n      var targetIsArray = Array.isArray(target);\n      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n      if (!sourceAndTargetTypesMatch) {\n        return cloneUnlessOtherwiseSpecified(source, options);\n      } else if (sourceIsArray) {\n        return options.arrayMerge(target, source, options);\n      } else {\n        return mergeObject(target, source, options);\n      }\n    }\n    deepmerge.all = function deepmergeAll(array, options) {\n      if (!Array.isArray(array)) {\n        throw new Error('first argument should be an array');\n      }\n      return array.reduce(function (prev, next) {\n        return deepmerge(prev, next, options);\n      }, {});\n    };\n    var deepmerge_1 = deepmerge;\n    return deepmerge_1;\n  });\n});","lineCount":92,"map":[[2,2,1,1],[2,13,1,11,"global"],[2,19,1,17],[2,21,1,19,"factory"],[2,28,1,26],[2,30,1,28],[3,4,2,1],[3,11,2,8,"exports"],[3,18,2,15],[3,23,2,20],[3,31,2,28],[3,35,2,32],[3,42,2,39,"module"],[3,48,2,45],[3,53,2,50],[3,64,2,61],[3,67,2,64,"module"],[3,73,2,70],[3,74,2,71,"exports"],[3,81,2,78],[3,84,2,81,"factory"],[3,91,2,88],[3,92,2,89],[3,93,2,90],[3,96,3,1],[3,103,3,8,"define"],[3,109,3,14],[3,114,3,19],[3,124,3,29],[3,128,3,33,"define"],[3,134,3,39],[3,135,3,40,"amd"],[3,138,3,43],[3,141,3,46,"define"],[3,147,3,52],[3,148,3,53,"factory"],[3,155,3,60],[3,156,3,61],[3,160,4,2,"global"],[3,166,4,8],[3,169,4,11,"global"],[3,175,4,17],[3,179,4,21,"self"],[3,183,4,25],[3,185,4,27,"global"],[3,191,4,33],[3,192,4,34,"deepmerge"],[3,201,4,43],[3,204,4,46,"factory"],[3,211,4,53],[3,212,4,54],[3,213,4,55],[3,214,4,56],[4,2,5,0],[4,3,5,1],[4,5,5,2],[4,9,5,6],[4,11,5,8],[4,23,5,20],[5,4,5,22],[5,16,5,34],[7,4,7,1],[7,8,7,5,"isMergeableObject"],[7,25,7,22],[7,28,7,25],[7,37,7,34,"isMergeableObject"],[7,54,7,51,"isMergeableObject"],[7,55,7,52,"value"],[7,60,7,57],[7,62,7,59],[8,6,8,2],[8,13,8,9,"isNonNullObject"],[8,28,8,24],[8,29,8,25,"value"],[8,34,8,30],[8,35,8,31],[8,39,9,6],[8,40,9,7,"isSpecial"],[8,49,9,16],[8,50,9,17,"value"],[8,55,9,22],[8,56,9,23],[9,4,10,1],[9,5,10,2],[10,4,12,1],[10,13,12,10,"isNonNullObject"],[10,28,12,25,"isNonNullObject"],[10,29,12,26,"value"],[10,34,12,31],[10,36,12,33],[11,6,13,2],[11,13,13,9],[11,14,13,10],[11,15,13,11,"value"],[11,20,13,16],[11,24,13,20],[11,31,13,27,"value"],[11,36,13,32],[11,41,13,37],[11,49,13,45],[12,4,14,1],[13,4,16,1],[13,13,16,10,"isSpecial"],[13,22,16,19,"isSpecial"],[13,23,16,20,"value"],[13,28,16,25],[13,30,16,27],[14,6,17,2],[14,10,17,6,"stringValue"],[14,21,17,17],[14,24,17,20,"Object"],[14,30,17,26],[14,31,17,27,"prototype"],[14,40,17,36],[14,41,17,37,"toString"],[14,49,17,45],[14,50,17,46,"call"],[14,54,17,50],[14,55,17,51,"value"],[14,60,17,56],[14,61,17,57],[15,6,19,2],[15,13,19,9,"stringValue"],[15,24,19,20],[15,29,19,25],[15,46,19,42],[15,50,20,6,"stringValue"],[15,61,20,17],[15,66,20,22],[15,81,20,37],[15,85,21,6,"isReactElement"],[15,99,21,20],[15,100,21,21,"value"],[15,105,21,26],[15,106,21,27],[16,4,22,1],[18,4,24,1],[19,4,25,1],[19,8,25,5,"canUseSymbol"],[19,20,25,17],[19,23,25,20],[19,30,25,27,"Symbol"],[19,36,25,33],[19,41,25,38],[19,51,25,48],[19,55,25,52,"Symbol"],[19,61,25,58],[19,62,25,59,"for"],[19,65,25,62],[20,4,26,1],[20,8,26,5,"REACT_ELEMENT_TYPE"],[20,26,26,23],[20,29,26,26,"canUseSymbol"],[20,41,26,38],[20,44,26,41,"Symbol"],[20,50,26,47],[20,51,26,48,"for"],[20,54,26,51],[20,55,26,52],[20,70,26,67],[20,71,26,68],[20,74,26,71],[20,80,26,77],[21,4,28,1],[21,13,28,10,"isReactElement"],[21,27,28,24,"isReactElement"],[21,28,28,25,"value"],[21,33,28,30],[21,35,28,32],[22,6,29,2],[22,13,29,9,"value"],[22,18,29,14],[22,19,29,15,"$$typeof"],[22,27,29,23],[22,32,29,28,"REACT_ELEMENT_TYPE"],[22,50,29,46],[23,4,30,1],[24,4,32,1],[24,13,32,10,"emptyTarget"],[24,24,32,21,"emptyTarget"],[24,25,32,22,"val"],[24,28,32,25],[24,30,32,27],[25,6,33,2],[25,13,33,9,"Array"],[25,18,33,14],[25,19,33,15,"isArray"],[25,26,33,22],[25,27,33,23,"val"],[25,30,33,26],[25,31,33,27],[25,34,33,30],[25,36,33,32],[25,39,33,35],[25,40,33,36],[25,41,33,37],[26,4,34,1],[27,4,36,1],[27,13,36,10,"cloneUnlessOtherwiseSpecified"],[27,42,36,39,"cloneUnlessOtherwiseSpecified"],[27,43,36,40,"value"],[27,48,36,45],[27,50,36,47,"options"],[27,57,36,54],[27,59,36,56],[28,6,37,2],[28,13,37,10,"options"],[28,20,37,17],[28,21,37,18,"clone"],[28,26,37,23],[28,31,37,28],[28,36,37,33],[28,40,37,37,"options"],[28,47,37,44],[28,48,37,45,"isMergeableObject"],[28,65,37,62],[28,66,37,63,"value"],[28,71,37,68],[28,72,37,69],[28,75,38,5,"deepmerge"],[28,84,38,14],[28,85,38,15,"emptyTarget"],[28,96,38,26],[28,97,38,27,"value"],[28,102,38,32],[28,103,38,33],[28,105,38,35,"value"],[28,110,38,40],[28,112,38,42,"options"],[28,119,38,49],[28,120,38,50],[28,123,39,5,"value"],[28,128,39,10],[29,4,40,1],[30,4,42,1],[30,13,42,10,"defaultArrayMerge"],[30,30,42,27,"defaultArrayMerge"],[30,31,42,28,"target"],[30,37,42,34],[30,39,42,36,"source"],[30,45,42,42],[30,47,42,44,"options"],[30,54,42,51],[30,56,42,53],[31,6,43,2],[31,13,43,9,"target"],[31,19,43,15],[31,20,43,16,"concat"],[31,26,43,22],[31,27,43,23,"source"],[31,33,43,29],[31,34,43,30],[31,35,43,31,"map"],[31,38,43,34],[31,39,43,35],[31,49,43,44,"element"],[31,56,43,51],[31,58,43,53],[32,8,44,3],[32,15,44,10,"cloneUnlessOtherwiseSpecified"],[32,44,44,39],[32,45,44,40,"element"],[32,52,44,47],[32,54,44,49,"options"],[32,61,44,56],[32,62,44,57],[33,6,45,2],[33,7,45,3],[33,8,45,4],[34,4,46,1],[35,4,48,1],[35,13,48,10,"getMergeFunction"],[35,29,48,26,"getMergeFunction"],[35,30,48,27,"key"],[35,33,48,30],[35,35,48,32,"options"],[35,42,48,39],[35,44,48,41],[36,6,49,2],[36,10,49,6],[36,11,49,7,"options"],[36,18,49,14],[36,19,49,15,"customMerge"],[36,30,49,26],[36,32,49,28],[37,8,50,3],[37,15,50,10,"deepmerge"],[37,24,50,19],[38,6,51,2],[39,6,52,2],[39,10,52,6,"customMerge"],[39,21,52,17],[39,24,52,20,"options"],[39,31,52,27],[39,32,52,28,"customMerge"],[39,43,52,39],[39,44,52,40,"key"],[39,47,52,43],[39,48,52,44],[40,6,53,2],[40,13,53,9],[40,20,53,16,"customMerge"],[40,31,53,27],[40,36,53,32],[40,46,53,42],[40,49,53,45,"customMerge"],[40,60,53,56],[40,63,53,59,"deepmerge"],[40,72,53,68],[41,4,54,1],[42,4,56,1],[42,13,56,10,"getEnumerableOwnPropertySymbols"],[42,44,56,41,"getEnumerableOwnPropertySymbols"],[42,45,56,42,"target"],[42,51,56,48],[42,53,56,50],[43,6,57,2],[43,13,57,9,"Object"],[43,19,57,15],[43,20,57,16,"getOwnPropertySymbols"],[43,41,57,37],[43,44,58,5,"Object"],[43,50,58,11],[43,51,58,12,"getOwnPropertySymbols"],[43,72,58,33],[43,73,58,34,"target"],[43,79,58,40],[43,80,58,41],[43,81,58,42,"filter"],[43,87,58,48],[43,88,58,49],[43,98,58,58,"symbol"],[43,104,58,64],[43,106,58,66],[44,8,59,4],[44,15,59,11,"target"],[44,21,59,17],[44,22,59,18,"propertyIsEnumerable"],[44,42,59,38],[44,43,59,39,"symbol"],[44,49,59,45],[44,50,59,46],[45,6,60,3],[45,7,60,4],[45,8,60,5],[45,11,61,5],[45,13,61,7],[46,4,62,1],[47,4,64,1],[47,13,64,10,"getKeys"],[47,20,64,17,"getKeys"],[47,21,64,18,"target"],[47,27,64,24],[47,29,64,26],[48,6,65,2],[48,13,65,9,"Object"],[48,19,65,15],[48,20,65,16,"keys"],[48,24,65,20],[48,25,65,21,"target"],[48,31,65,27],[48,32,65,28],[48,33,65,29,"concat"],[48,39,65,35],[48,40,65,36,"getEnumerableOwnPropertySymbols"],[48,71,65,67],[48,72,65,68,"target"],[48,78,65,74],[48,79,65,75],[48,80,65,76],[49,4,66,1],[50,4,68,1],[50,13,68,10,"mergeObject"],[50,24,68,21,"mergeObject"],[50,25,68,22,"target"],[50,31,68,28],[50,33,68,30,"source"],[50,39,68,36],[50,41,68,38,"options"],[50,48,68,45],[50,50,68,47],[51,6,69,2],[51,10,69,6,"destination"],[51,21,69,17],[51,24,69,20],[51,25,69,21],[51,26,69,22],[52,6,70,2],[52,10,70,6,"options"],[52,17,70,13],[52,18,70,14,"isMergeableObject"],[52,35,70,31],[52,36,70,32,"target"],[52,42,70,38],[52,43,70,39],[52,45,70,41],[53,8,71,3,"getKeys"],[53,15,71,10],[53,16,71,11,"target"],[53,22,71,17],[53,23,71,18],[53,24,71,19,"forEach"],[53,31,71,26],[53,32,71,27],[53,42,71,36,"key"],[53,45,71,39],[53,47,71,41],[54,10,72,4,"destination"],[54,21,72,15],[54,22,72,16,"key"],[54,25,72,19],[54,26,72,20],[54,29,72,23,"cloneUnlessOtherwiseSpecified"],[54,58,72,52],[54,59,72,53,"target"],[54,65,72,59],[54,66,72,60,"key"],[54,69,72,63],[54,70,72,64],[54,72,72,66,"options"],[54,79,72,73],[54,80,72,74],[55,8,73,3],[55,9,73,4],[55,10,73,5],[56,6,74,2],[57,6,75,2,"getKeys"],[57,13,75,9],[57,14,75,10,"source"],[57,20,75,16],[57,21,75,17],[57,22,75,18,"forEach"],[57,29,75,25],[57,30,75,26],[57,40,75,35,"key"],[57,43,75,38],[57,45,75,40],[58,8,76,3],[58,12,76,7],[58,13,76,8,"options"],[58,20,76,15],[58,21,76,16,"isMergeableObject"],[58,38,76,33],[58,39,76,34,"source"],[58,45,76,40],[58,46,76,41,"key"],[58,49,76,44],[58,50,76,45],[58,51,76,46],[58,55,76,50],[58,56,76,51,"target"],[58,62,76,57],[58,63,76,58,"key"],[58,66,76,61],[58,67,76,62],[58,69,76,64],[59,10,77,4,"destination"],[59,21,77,15],[59,22,77,16,"key"],[59,25,77,19],[59,26,77,20],[59,29,77,23,"cloneUnlessOtherwiseSpecified"],[59,58,77,52],[59,59,77,53,"source"],[59,65,77,59],[59,66,77,60,"key"],[59,69,77,63],[59,70,77,64],[59,72,77,66,"options"],[59,79,77,73],[59,80,77,74],[60,8,78,3],[60,9,78,4],[60,15,78,10],[61,10,79,4,"destination"],[61,21,79,15],[61,22,79,16,"key"],[61,25,79,19],[61,26,79,20],[61,29,79,23,"getMergeFunction"],[61,45,79,39],[61,46,79,40,"key"],[61,49,79,43],[61,51,79,45,"options"],[61,58,79,52],[61,59,79,53],[61,60,79,54,"target"],[61,66,79,60],[61,67,79,61,"key"],[61,70,79,64],[61,71,79,65],[61,73,79,67,"source"],[61,79,79,73],[61,80,79,74,"key"],[61,83,79,77],[61,84,79,78],[61,86,79,80,"options"],[61,93,79,87],[61,94,79,88],[62,8,80,3],[63,6,81,2],[63,7,81,3],[63,8,81,4],[64,6,82,2],[64,13,82,9,"destination"],[64,24,82,20],[65,4,83,1],[66,4,85,1],[66,13,85,10,"deepmerge"],[66,22,85,19,"deepmerge"],[66,23,85,20,"target"],[66,29,85,26],[66,31,85,28,"source"],[66,37,85,34],[66,39,85,36,"options"],[66,46,85,43],[66,48,85,45],[67,6,86,2,"options"],[67,13,86,9],[67,16,86,12,"options"],[67,23,86,19],[67,27,86,23],[67,28,86,24],[67,29,86,25],[68,6,87,2,"options"],[68,13,87,9],[68,14,87,10,"arrayMerge"],[68,24,87,20],[68,27,87,23,"options"],[68,34,87,30],[68,35,87,31,"arrayMerge"],[68,45,87,41],[68,49,87,45,"defaultArrayMerge"],[68,66,87,62],[69,6,88,2,"options"],[69,13,88,9],[69,14,88,10,"isMergeableObject"],[69,31,88,27],[69,34,88,30,"options"],[69,41,88,37],[69,42,88,38,"isMergeableObject"],[69,59,88,55],[69,63,88,59,"isMergeableObject"],[69,80,88,76],[70,6,90,2],[70,10,90,6,"sourceIsArray"],[70,23,90,19],[70,26,90,22,"Array"],[70,31,90,27],[70,32,90,28,"isArray"],[70,39,90,35],[70,40,90,36,"source"],[70,46,90,42],[70,47,90,43],[71,6,91,2],[71,10,91,6,"targetIsArray"],[71,23,91,19],[71,26,91,22,"Array"],[71,31,91,27],[71,32,91,28,"isArray"],[71,39,91,35],[71,40,91,36,"target"],[71,46,91,42],[71,47,91,43],[72,6,92,2],[72,10,92,6,"sourceAndTargetTypesMatch"],[72,35,92,31],[72,38,92,34,"sourceIsArray"],[72,51,92,47],[72,56,92,52,"targetIsArray"],[72,69,92,65],[73,6,94,2],[73,10,94,6],[73,11,94,7,"sourceAndTargetTypesMatch"],[73,36,94,32],[73,38,94,34],[74,8,95,3],[74,15,95,10,"cloneUnlessOtherwiseSpecified"],[74,44,95,39],[74,45,95,40,"source"],[74,51,95,46],[74,53,95,48,"options"],[74,60,95,55],[74,61,95,56],[75,6,96,2],[75,7,96,3],[75,13,96,9],[75,17,96,13,"sourceIsArray"],[75,30,96,26],[75,32,96,28],[76,8,97,3],[76,15,97,10,"options"],[76,22,97,17],[76,23,97,18,"arrayMerge"],[76,33,97,28],[76,34,97,29,"target"],[76,40,97,35],[76,42,97,37,"source"],[76,48,97,43],[76,50,97,45,"options"],[76,57,97,52],[76,58,97,53],[77,6,98,2],[77,7,98,3],[77,13,98,9],[78,8,99,3],[78,15,99,10,"mergeObject"],[78,26,99,21],[78,27,99,22,"target"],[78,33,99,28],[78,35,99,30,"source"],[78,41,99,36],[78,43,99,38,"options"],[78,50,99,45],[78,51,99,46],[79,6,100,2],[80,4,101,1],[81,4,103,1,"deepmerge"],[81,13,103,10],[81,14,103,11,"all"],[81,17,103,14],[81,20,103,17],[81,29,103,26,"deepmergeAll"],[81,41,103,38,"deepmergeAll"],[81,42,103,39,"array"],[81,47,103,44],[81,49,103,46,"options"],[81,56,103,53],[81,58,103,55],[82,6,104,2],[82,10,104,6],[82,11,104,7,"Array"],[82,16,104,12],[82,17,104,13,"isArray"],[82,24,104,20],[82,25,104,21,"array"],[82,30,104,26],[82,31,104,27],[82,33,104,29],[83,8,105,3],[83,14,105,9],[83,18,105,13,"Error"],[83,23,105,18],[83,24,105,19],[83,59,105,54],[83,60,105,55],[84,6,106,2],[85,6,108,2],[85,13,108,9,"array"],[85,18,108,14],[85,19,108,15,"reduce"],[85,25,108,21],[85,26,108,22],[85,36,108,31,"prev"],[85,40,108,35],[85,42,108,37,"next"],[85,46,108,41],[85,48,108,43],[86,8,109,3],[86,15,109,10,"deepmerge"],[86,24,109,19],[86,25,109,20,"prev"],[86,29,109,24],[86,31,109,26,"next"],[86,35,109,30],[86,37,109,32,"options"],[86,44,109,39],[86,45,109,40],[87,6,110,2],[87,7,110,3],[87,9,110,5],[87,10,110,6],[87,11,110,7],[87,12,110,8],[88,4,111,1],[88,5,111,2],[89,4,113,1],[89,8,113,5,"deepmerge_1"],[89,19,113,16],[89,22,113,19,"deepmerge"],[89,31,113,28],[90,4,115,1],[90,11,115,8,"deepmerge_1"],[90,22,115,19],[91,2,117,0],[91,3,117,1],[91,4,117,2],[92,0,117,4],[92,3]],"functionMap":{"names":["<global>","<anonymous>","isMergeableObject","isNonNullObject","isSpecial","isReactElement","emptyTarget","cloneUnlessOtherwiseSpecified","defaultArrayMerge","target.concat.map$argument_0","getMergeFunction","getEnumerableOwnPropertySymbols","Object.getOwnPropertySymbols.filter$argument_0","getKeys","mergeObject","getKeys.forEach$argument_0","deepmerge","deepmergeAll","array.reduce$argument_0"],"mappings":"AAA,CC;CDI,OC;yBCE;EDG;CEE;EFE;CGE;EHM;CIM;EJE;CKE;ELE;CME;ENI;COE;mCCC;GDE;EPC;CSE;ETM;CUE;iDCE;IDE;EVE;CYE;EZE;CaE;2BCG;IDE;0BCE;GDM;EbE;CeE;EfgB;iBgBE;sBCK;GDE;EhBC;CDM"},"hasCjsExports":true},"type":"js/module"}]}