{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoUpdates","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":40,"index":88}}],"key":"xvfiwKXsFVvB05bziLrxffeS3bo=","exportNames":["*"],"imports":1}},{"name":"./Updates.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":66,"index":155}}],"key":"DhdHs5n8PWgUuT3xXDIgOGCWs8A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _excluded = [\"manifestString\"],\n    _excluded2 = [\"manifestString\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"isEnabled\", {\n    enumerable: true,\n    get: function () {\n      return isEnabled;\n    }\n  });\n  Object.defineProperty(exports, \"updateId\", {\n    enumerable: true,\n    get: function () {\n      return updateId;\n    }\n  });\n  Object.defineProperty(exports, \"channel\", {\n    enumerable: true,\n    get: function () {\n      return channel;\n    }\n  });\n  Object.defineProperty(exports, \"runtimeVersion\", {\n    enumerable: true,\n    get: function () {\n      return runtimeVersion;\n    }\n  });\n  Object.defineProperty(exports, \"checkAutomatically\", {\n    enumerable: true,\n    get: function () {\n      return checkAutomatically;\n    }\n  });\n  Object.defineProperty(exports, \"localAssets\", {\n    enumerable: true,\n    get: function () {\n      return localAssets;\n    }\n  });\n  Object.defineProperty(exports, \"isEmergencyLaunch\", {\n    enumerable: true,\n    get: function () {\n      return isEmergencyLaunch;\n    }\n  });\n  Object.defineProperty(exports, \"emergencyLaunchReason\", {\n    enumerable: true,\n    get: function () {\n      return emergencyLaunchReason;\n    }\n  });\n  Object.defineProperty(exports, \"launchDuration\", {\n    enumerable: true,\n    get: function () {\n      return launchDuration;\n    }\n  });\n  Object.defineProperty(exports, \"isEmbeddedLaunch\", {\n    enumerable: true,\n    get: function () {\n      return isEmbeddedLaunch;\n    }\n  });\n  Object.defineProperty(exports, \"isUsingEmbeddedAssets\", {\n    enumerable: true,\n    get: function () {\n      return isUsingEmbeddedAssets;\n    }\n  });\n  Object.defineProperty(exports, \"manifest\", {\n    enumerable: true,\n    get: function () {\n      return manifest;\n    }\n  });\n  Object.defineProperty(exports, \"createdAt\", {\n    enumerable: true,\n    get: function () {\n      return createdAt;\n    }\n  });\n  exports.reloadAsync = reloadAsync;\n  exports.checkForUpdateAsync = checkForUpdateAsync;\n  exports.getExtraParamsAsync = getExtraParamsAsync;\n  exports.setExtraParamAsync = setExtraParamAsync;\n  exports.readLogEntriesAsync = readLogEntriesAsync;\n  exports.clearLogEntriesAsync = clearLogEntriesAsync;\n  exports.fetchUpdateAsync = fetchUpdateAsync;\n  exports.setUpdateURLAndRequestHeadersOverride = setUpdateURLAndRequestHeadersOverride;\n  var _babelRuntimeHelpersObjectWithoutProperties = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _objectWithoutProperties = _interopDefault(_babelRuntimeHelpersObjectWithoutProperties);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _ExpoUpdates = require(_dependencyMap[3], \"./ExpoUpdates\");\n  var ExpoUpdates = _interopDefault(_ExpoUpdates);\n  var _UpdatesTypes = require(_dependencyMap[4], \"./Updates.types\");\n  /**\n   * Whether `expo-updates` is enabled. This may be false in a variety of cases including:\n   * - enabled set to false in configuration\n   * - missing or invalid URL in configuration\n   * - missing runtime version or SDK version in configuration\n   * - error accessing storage on device during initialization\n   *\n   * When false, the embedded update is loaded.\n   */\n  var isEnabled = !!ExpoUpdates.default.isEnabled;\n  /**\n   * The UUID that uniquely identifies the currently running update. The\n   * UUID is represented in its canonical string form and will always use lowercase letters.\n   * This value is `null` when running in a local development environment or any other environment where `expo-updates` is disabled.\n   * @example\n   * `\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"`\n   */\n  var updateId = ExpoUpdates.default.updateId && typeof ExpoUpdates.default.updateId === 'string' ? ExpoUpdates.default.updateId.toLowerCase() : null;\n  /**\n   * The channel name of the current build, if configured for use with EAS Update. `null` otherwise.\n   *\n   * Expo Go and development builds are not set to a specific channel and can run any updates compatible with their native runtime. Therefore, this value will always be `null` when running an update on Expo Go or a development build.\n   */\n  var channel = ExpoUpdates.default.channel ?? null;\n  /**\n   * The runtime version of the current build.\n   */\n  var runtimeVersion = ExpoUpdates.default.runtimeVersion ?? null;\n  var _checkAutomaticallyMapNativeToJS = {\n    ALWAYS: _UpdatesTypes.UpdatesCheckAutomaticallyValue.ON_LOAD,\n    ERROR_RECOVERY_ONLY: _UpdatesTypes.UpdatesCheckAutomaticallyValue.ON_ERROR_RECOVERY,\n    NEVER: _UpdatesTypes.UpdatesCheckAutomaticallyValue.NEVER,\n    WIFI_ONLY: _UpdatesTypes.UpdatesCheckAutomaticallyValue.WIFI_ONLY\n  };\n  /**\n   * Determines if and when `expo-updates` checks for and downloads updates automatically on startup.\n   */\n  var checkAutomatically = _checkAutomaticallyMapNativeToJS[ExpoUpdates.default.checkAutomatically] ?? null;\n  // @docsMissing\n  /**\n   * @hidden\n   */\n  var localAssets = ExpoUpdates.default.localAssets ?? {};\n  /**\n   * `expo-updates` does its very best to always launch monotonically newer versions of your app so\n   * you don't need to worry about backwards compatibility when you put out an update. In very rare\n   * cases, it's possible that `expo-updates` may need to fall back to the update that's embedded in\n   * the app binary, even after newer updates have been downloaded and run (an \"emergency launch\").\n   * This boolean will be `true` if the app is launching under this fallback mechanism and `false`\n   * otherwise. If you are concerned about backwards compatibility of future updates to your app, you\n   * can use this constant to provide special behavior for this rare case.\n   */\n  var isEmergencyLaunch = ExpoUpdates.default.isEmergencyLaunch;\n  /**\n   * If `isEmergencyLaunch` is set to true, this will contain a string error message describing\n   * what failed during initialization.\n   */\n  var emergencyLaunchReason = ExpoUpdates.default.emergencyLaunchReason;\n  /**\n   * Number of milliseconds it took to launch.\n   */\n  var launchDuration = ExpoUpdates.default.launchDuration;\n  /**\n   * This will be true if the currently running update is the one embedded in the build,\n   * and not one downloaded from the updates server.\n   */\n  var isEmbeddedLaunch = ExpoUpdates.default.isEmbeddedLaunch || false;\n  // @docsMissing\n  /**\n   * @hidden\n   */\n  var isUsingEmbeddedAssets = ExpoUpdates.default.isUsingEmbeddedAssets || false;\n  /**\n   * If `expo-updates` is enabled, this is the\n   * [manifest](/versions/latest/sdk/constants/#manifest) (or\n   * [classic manifest](/versions/latest/sdk/constants/#appmanifest))\n   * object for the update that's currently running.\n   *\n   * In development mode, or any other environment in which `expo-updates` is disabled, this object is\n   * empty.\n   */\n  var manifest = (ExpoUpdates.default.manifestString ? JSON.parse(ExpoUpdates.default.manifestString) : ExpoUpdates.default.manifest) ?? {};\n  /**\n   * If `expo-updates` is enabled, this is a `Date` object representing the creation time of the update that's currently running (whether it was embedded or downloaded at runtime).\n   *\n   * In development mode, or any other environment in which `expo-updates` is disabled, this value is\n   * null.\n   */\n  var createdAt = ExpoUpdates.default.commitTime ? new Date(ExpoUpdates.default.commitTime) : null;\n  /**\n   * During non-expo development we block accessing the updates API methods on the JS side, but when developing in\n   * Expo Go or a development client build, the controllers should have control over which API methods should\n   * be allowed.\n   */\n  var shouldDeferToNativeForAPIMethodAvailabilityInDevelopment = !!ExpoUpdates.default.shouldDeferToNativeForAPIMethodAvailabilityInDevelopment;\n  /**\n   * Developer tool is set when a project is served by `expo start`.\n   */\n  var isUsingDeveloperTool = 'extra' in manifest ? !!manifest.extra?.expoGo?.developer?.tool : false;\n  var manualUpdatesInstructions = 'To test usage of the expo-updates JS API in your app, make a release build with `npx expo run:ios --configuration Release` or ' + '`npx expo run:android --variant Release`.';\n  /**\n   * Instructs the app to reload using the most recently downloaded version. This is useful for\n   * triggering a newly downloaded update to launch without the user needing to manually restart the\n   * app.\n   * Unlike `Expo.reloadAppAsync()` provided by the `expo` package,\n   * this function not only reloads the app but also changes the loaded JavaScript bundle to that of the most recently downloaded update.\n   *\n   * It is not recommended to place any meaningful logic after a call to `await\n   * Updates.reloadAsync()`. This is because the promise is resolved after verifying that the app can\n   * be reloaded, and immediately before posting an asynchronous task to the main thread to actually\n   * reload the app. It is unsafe to make any assumptions about whether any more JS code will be\n   * executed after the `Updates.reloadAsync` method call resolves, since that depends on the OS and\n   * the state of the native module and main threads.\n   *\n   * This method cannot be used in Expo Go or development mode, and the returned promise will be rejected if you\n   * try to do so. It also rejects when `expo-updates` is not enabled.\n   *\n   * @return A promise that fulfills right before the reload instruction is sent to the JS runtime, or\n   * rejects if it cannot find a reference to the JS runtime. If the promise is rejected in production\n   * mode, it most likely means you have installed the module incorrectly. Double check you've\n   * followed the installation instructions. In particular, on iOS ensure that you set the `bridge`\n   * property on `EXUpdatesAppController` with a pointer to the `RCTBridge` you want to reload, and on\n   * Android ensure you either call `UpdatesController.initialize` with the instance of\n   * `ReactApplication` you want to reload, or call `UpdatesController.setReactNativeHost` with the\n   * proper instance of `ReactNativeHost`.\n   */\n  function reloadAsync() {\n    return _reloadAsync.apply(this, arguments);\n  }\n  /**\n   * Checks the server to see if a newly deployed update to your project is available. Does not\n   * actually download the update. This method cannot be used in development mode, and the returned\n   * promise will be rejected if you try to do so.\n   *\n   * Checking for an update uses a device's bandwidth and battery life like any network call.\n   * Additionally, updates served by Expo may be rate limited. A good rule of thumb to check for\n   * updates judiciously is to check when the user launches or foregrounds the app. Avoid polling for\n   * updates in a frequent loop.\n   *\n   * @return A promise that fulfills with an [`UpdateCheckResult`](#updatecheckresult) object.\n   *\n   * The promise rejects in Expo Go or if the app is in development mode, or if there is an unexpected error or\n   * timeout communicating with the server. It also rejects when `expo-updates` is not enabled.\n   */\n  function _reloadAsync() {\n    _reloadAsync = (0, _asyncToGenerator.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot use the Updates module in development mode in a production app. ${manualUpdatesInstructions}`);\n      }\n      yield ExpoUpdates.default.reload();\n    });\n    return _reloadAsync.apply(this, arguments);\n  }\n  function checkForUpdateAsync() {\n    return _checkForUpdateAsync.apply(this, arguments);\n  }\n  /**\n   * Retrieves the current extra params.\n   *\n   * This method cannot be used in Expo Go or development mode. It also rejects when `expo-updates` is not enabled.\n   */\n  function _checkForUpdateAsync() {\n    _checkForUpdateAsync = (0, _asyncToGenerator.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot check for updates in development mode. ${manualUpdatesInstructions}`);\n      }\n      var result = yield ExpoUpdates.default.checkForUpdateAsync();\n      if ('manifestString' in result) {\n        var manifestString = result.manifestString,\n          rest = (0, _objectWithoutProperties.default)(result, _excluded);\n        return {\n          ...rest,\n          manifest: JSON.parse(manifestString)\n        };\n      }\n      return result;\n    });\n    return _checkForUpdateAsync.apply(this, arguments);\n  }\n  function getExtraParamsAsync() {\n    return _getExtraParamsAsync.apply(this, arguments);\n  }\n  /**\n   * Sets an extra param if value is non-null, otherwise unsets the param.\n   * Extra params are sent as an [Expo Structured Field Value Dictionary](/technical-specs/expo-sfv-0/)\n   * in the `Expo-Extra-Params` header of update requests. A compliant update server may use these params when selecting an update to serve.\n   *\n   * This method cannot be used in Expo Go or development mode. It also rejects when `expo-updates` is not enabled.\n   */\n  function _getExtraParamsAsync() {\n    _getExtraParamsAsync = (0, _asyncToGenerator.default)(function* () {\n      return yield ExpoUpdates.default.getExtraParamsAsync();\n    });\n    return _getExtraParamsAsync.apply(this, arguments);\n  }\n  function setExtraParamAsync(_x, _x2) {\n    return _setExtraParamAsync.apply(this, arguments);\n  }\n  /**\n   * Retrieves the most recent `expo-updates` log entries.\n   *\n   * @param maxAge Sets the max age of retrieved log entries in milliseconds. Default to `3600000` ms (1 hour).\n   *\n   * @return A promise that fulfills with an array of [`UpdatesLogEntry`](#updateslogentry) objects;\n   *\n   * The promise rejects if there is an unexpected error in retrieving the logs.\n   */\n  function _setExtraParamAsync() {\n    _setExtraParamAsync = (0, _asyncToGenerator.default)(function* (key, value) {\n      return yield ExpoUpdates.default.setExtraParamAsync(key, value ?? null);\n    });\n    return _setExtraParamAsync.apply(this, arguments);\n  }\n  function readLogEntriesAsync() {\n    return _readLogEntriesAsync.apply(this, arguments);\n  }\n  /**\n   * Clears existing `expo-updates` log entries.\n   *\n   * > For now, this operation does nothing on the client.  Once log persistence has been\n   * > implemented, this operation will actually remove existing logs.\n   *\n   * @return A promise that fulfills if the clear operation was successful.\n   *\n   * The promise rejects if there is an unexpected error in clearing the logs.\n   *\n   */\n  function _readLogEntriesAsync() {\n    _readLogEntriesAsync = (0, _asyncToGenerator.default)(function* () {\n      var maxAge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3600000;\n      return yield ExpoUpdates.default.readLogEntriesAsync(maxAge);\n    });\n    return _readLogEntriesAsync.apply(this, arguments);\n  }\n  function clearLogEntriesAsync() {\n    return _clearLogEntriesAsync.apply(this, arguments);\n  }\n  /**\n   * Downloads the most recently deployed update to your project from server to the device's local\n   * storage. This method cannot be used in development mode, and the returned promise will be\n   * rejected if you try to do so.\n   *\n   > **Note:** [`reloadAsync()`](#updatesreloadasync) can be called after promise resolution to\n   * reload the app using the most recently downloaded version. Otherwise, the update will be applied\n   * on the next app cold start.\n   *\n   * @return A promise that fulfills with an [`UpdateFetchResult`](#updatefetchresult) object.\n   *\n   * The promise rejects in Expo Go or if the app is in development mode, or if there is an unexpected error or\n   * timeout communicating with the server. It also rejects when `expo-updates` is not enabled.\n   */\n  function _clearLogEntriesAsync() {\n    _clearLogEntriesAsync = (0, _asyncToGenerator.default)(function* () {\n      yield ExpoUpdates.default.clearLogEntriesAsync();\n    });\n    return _clearLogEntriesAsync.apply(this, arguments);\n  }\n  function fetchUpdateAsync() {\n    return _fetchUpdateAsync.apply(this, arguments);\n  }\n  /**\n   * Overrides updates URL and reuqest headers in runtime from build time.\n   * This method allows you to load specific updates from a URL that you provide.\n   * Use this method at your own risk, as it may cause unexpected behavior.\n   * [Learn more about use cases and limitations](https://docs.expo.dev/eas-update/override/).\n   * @experimental\n   */\n  function _fetchUpdateAsync() {\n    _fetchUpdateAsync = (0, _asyncToGenerator.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot fetch updates in development mode. ${manualUpdatesInstructions}`);\n      }\n      var result = yield ExpoUpdates.default.fetchUpdateAsync();\n      if ('manifestString' in result) {\n        var manifestString = result.manifestString,\n          rest = (0, _objectWithoutProperties.default)(result, _excluded2);\n        return {\n          ...rest,\n          manifest: JSON.parse(manifestString)\n        };\n      }\n      return result;\n    });\n    return _fetchUpdateAsync.apply(this, arguments);\n  }\n  function setUpdateURLAndRequestHeadersOverride(configOverride) {\n    ExpoUpdates.default.setUpdateURLAndRequestHeadersOverride(configOverride);\n  }\n});","lineCount":396,"map":[[14,2,13,0,"Object"],[14,8,13,0],[14,9,13,0,"defineProperty"],[14,23,13,0],[14,24,13,0,"exports"],[14,31,13,0],[15,4,13,0,"enumerable"],[15,14,13,0],[16,4,13,0,"get"],[16,7,13,0],[16,18,13,0,"get"],[16,19,13,0],[17,6,13,0],[17,13,13,0,"isEnabled"],[17,22,13,0],[18,4,13,0],[19,2,13,0],[20,2,21,0,"Object"],[20,8,21,0],[20,9,21,0,"defineProperty"],[20,23,21,0],[20,24,21,0,"exports"],[20,31,21,0],[21,4,21,0,"enumerable"],[21,14,21,0],[22,4,21,0,"get"],[22,7,21,0],[22,18,21,0,"get"],[22,19,21,0],[23,6,21,0],[23,13,21,0,"updateId"],[23,21,21,0],[24,4,21,0],[25,2,21,0],[26,2,29,0,"Object"],[26,8,29,0],[26,9,29,0,"defineProperty"],[26,23,29,0],[26,24,29,0,"exports"],[26,31,29,0],[27,4,29,0,"enumerable"],[27,14,29,0],[28,4,29,0,"get"],[28,7,29,0],[28,18,29,0,"get"],[28,19,29,0],[29,6,29,0],[29,13,29,0,"channel"],[29,20,29,0],[30,4,29,0],[31,2,29,0],[32,2,33,0,"Object"],[32,8,33,0],[32,9,33,0,"defineProperty"],[32,23,33,0],[32,24,33,0,"exports"],[32,31,33,0],[33,4,33,0,"enumerable"],[33,14,33,0],[34,4,33,0,"get"],[34,7,33,0],[34,18,33,0,"get"],[34,19,33,0],[35,6,33,0],[35,13,33,0,"runtimeVersion"],[35,27,33,0],[36,4,33,0],[37,2,33,0],[38,2,43,0,"Object"],[38,8,43,0],[38,9,43,0,"defineProperty"],[38,23,43,0],[38,24,43,0,"exports"],[38,31,43,0],[39,4,43,0,"enumerable"],[39,14,43,0],[40,4,43,0,"get"],[40,7,43,0],[40,18,43,0,"get"],[40,19,43,0],[41,6,43,0],[41,13,43,0,"checkAutomatically"],[41,31,43,0],[42,4,43,0],[43,2,43,0],[44,2,48,0,"Object"],[44,8,48,0],[44,9,48,0,"defineProperty"],[44,23,48,0],[44,24,48,0,"exports"],[44,31,48,0],[45,4,48,0,"enumerable"],[45,14,48,0],[46,4,48,0,"get"],[46,7,48,0],[46,18,48,0,"get"],[46,19,48,0],[47,6,48,0],[47,13,48,0,"localAssets"],[47,24,48,0],[48,4,48,0],[49,2,48,0],[50,2,58,0,"Object"],[50,8,58,0],[50,9,58,0,"defineProperty"],[50,23,58,0],[50,24,58,0,"exports"],[50,31,58,0],[51,4,58,0,"enumerable"],[51,14,58,0],[52,4,58,0,"get"],[52,7,58,0],[52,18,58,0,"get"],[52,19,58,0],[53,6,58,0],[53,13,58,0,"isEmergencyLaunch"],[53,30,58,0],[54,4,58,0],[55,2,58,0],[56,2,63,0,"Object"],[56,8,63,0],[56,9,63,0,"defineProperty"],[56,23,63,0],[56,24,63,0,"exports"],[56,31,63,0],[57,4,63,0,"enumerable"],[57,14,63,0],[58,4,63,0,"get"],[58,7,63,0],[58,18,63,0,"get"],[58,19,63,0],[59,6,63,0],[59,13,63,0,"emergencyLaunchReason"],[59,34,63,0],[60,4,63,0],[61,2,63,0],[62,2,67,0,"Object"],[62,8,67,0],[62,9,67,0,"defineProperty"],[62,23,67,0],[62,24,67,0,"exports"],[62,31,67,0],[63,4,67,0,"enumerable"],[63,14,67,0],[64,4,67,0,"get"],[64,7,67,0],[64,18,67,0,"get"],[64,19,67,0],[65,6,67,0],[65,13,67,0,"launchDuration"],[65,27,67,0],[66,4,67,0],[67,2,67,0],[68,2,72,0,"Object"],[68,8,72,0],[68,9,72,0,"defineProperty"],[68,23,72,0],[68,24,72,0,"exports"],[68,31,72,0],[69,4,72,0,"enumerable"],[69,14,72,0],[70,4,72,0,"get"],[70,7,72,0],[70,18,72,0,"get"],[70,19,72,0],[71,6,72,0],[71,13,72,0,"isEmbeddedLaunch"],[71,29,72,0],[72,4,72,0],[73,2,72,0],[74,2,77,0,"Object"],[74,8,77,0],[74,9,77,0,"defineProperty"],[74,23,77,0],[74,24,77,0,"exports"],[74,31,77,0],[75,4,77,0,"enumerable"],[75,14,77,0],[76,4,77,0,"get"],[76,7,77,0],[76,18,77,0,"get"],[76,19,77,0],[77,6,77,0],[77,13,77,0,"isUsingEmbeddedAssets"],[77,34,77,0],[78,4,77,0],[79,2,77,0],[80,2,87,0,"Object"],[80,8,87,0],[80,9,87,0,"defineProperty"],[80,23,87,0],[80,24,87,0,"exports"],[80,31,87,0],[81,4,87,0,"enumerable"],[81,14,87,0],[82,4,87,0,"get"],[82,7,87,0],[82,18,87,0,"get"],[82,19,87,0],[83,6,87,0],[83,13,87,0,"manifest"],[83,21,87,0],[84,4,87,0],[85,2,87,0],[86,2,95,0,"Object"],[86,8,95,0],[86,9,95,0,"defineProperty"],[86,23,95,0],[86,24,95,0,"exports"],[86,31,95,0],[87,4,95,0,"enumerable"],[87,14,95,0],[88,4,95,0,"get"],[88,7,95,0],[88,18,95,0,"get"],[88,19,95,0],[89,6,95,0],[89,13,95,0,"createdAt"],[89,22,95,0],[90,4,95,0],[91,2,95,0],[92,2,136,0,"exports"],[92,9,136,0],[92,10,136,0,"reloadAsync"],[92,21,136,0],[92,24,136,0,"reloadAsync"],[92,35,136,0],[93,2,158,0,"exports"],[93,9,158,0],[93,10,158,0,"checkForUpdateAsync"],[93,29,158,0],[93,32,158,0,"checkForUpdateAsync"],[93,51,158,0],[94,2,178,0,"exports"],[94,9,178,0],[94,10,178,0,"getExtraParamsAsync"],[94,29,178,0],[94,32,178,0,"getExtraParamsAsync"],[94,51,178,0],[95,2,188,0,"exports"],[95,9,188,0],[95,10,188,0,"setExtraParamAsync"],[95,28,188,0],[95,31,188,0,"setExtraParamAsync"],[95,49,188,0],[96,2,200,0,"exports"],[96,9,200,0],[96,10,200,0,"readLogEntriesAsync"],[96,29,200,0],[96,32,200,0,"readLogEntriesAsync"],[96,51,200,0],[97,2,214,0,"exports"],[97,9,214,0],[97,10,214,0,"clearLogEntriesAsync"],[97,30,214,0],[97,33,214,0,"clearLogEntriesAsync"],[97,53,214,0],[98,2,231,0,"exports"],[98,9,231,0],[98,10,231,0,"fetchUpdateAsync"],[98,26,231,0],[98,29,231,0,"fetchUpdateAsync"],[98,45,231,0],[99,2,253,0,"exports"],[99,9,253,0],[99,10,253,0,"setUpdateURLAndRequestHeadersOverride"],[99,47,253,0],[99,50,253,0,"setUpdateURLAndRequestHeadersOverride"],[99,87,253,0],[100,2,255,1],[100,6,255,1,"_babelRuntimeHelpersObjectWithoutProperties"],[100,49,255,1],[100,52,255,1,"require"],[100,59,255,1],[100,60,255,1,"_dependencyMap"],[100,74,255,1],[101,2,255,1],[101,6,255,1,"_objectWithoutProperties"],[101,30,255,1],[101,33,255,1,"_interopDefault"],[101,48,255,1],[101,49,255,1,"_babelRuntimeHelpersObjectWithoutProperties"],[101,92,255,1],[102,2,255,1],[102,6,255,1,"_babelRuntimeHelpersAsyncToGenerator"],[102,42,255,1],[102,45,255,1,"require"],[102,52,255,1],[102,53,255,1,"_dependencyMap"],[102,67,255,1],[103,2,255,1],[103,6,255,1,"_asyncToGenerator"],[103,23,255,1],[103,26,255,1,"_interopDefault"],[103,41,255,1],[103,42,255,1,"_babelRuntimeHelpersAsyncToGenerator"],[103,78,255,1],[104,2,1,0],[104,6,1,0,"_expoModulesCore"],[104,22,1,0],[104,25,1,0,"require"],[104,32,1,0],[104,33,1,0,"_dependencyMap"],[104,47,1,0],[105,2,2,0],[105,6,2,0,"_ExpoUpdates"],[105,18,2,0],[105,21,2,0,"require"],[105,28,2,0],[105,29,2,0,"_dependencyMap"],[105,43,2,0],[106,2,2,0],[106,6,2,0,"ExpoUpdates"],[106,17,2,0],[106,20,2,0,"_interopDefault"],[106,35,2,0],[106,36,2,0,"_ExpoUpdates"],[106,48,2,0],[107,2,3,0],[107,6,3,0,"_UpdatesTypes"],[107,19,3,0],[107,22,3,0,"require"],[107,29,3,0],[107,30,3,0,"_dependencyMap"],[107,44,3,0],[108,2,4,0],[109,0,5,0],[110,0,6,0],[111,0,7,0],[112,0,8,0],[113,0,9,0],[114,0,10,0],[115,0,11,0],[116,0,12,0],[117,2,13,7],[117,6,13,13,"isEnabled"],[117,15,13,22],[117,18,13,25],[117,19,13,26],[117,20,13,27,"ExpoUpdates"],[117,31,13,38],[117,32,13,38,"default"],[117,39,13,38],[117,40,13,39,"isEnabled"],[117,49,13,48],[118,2,14,0],[119,0,15,0],[120,0,16,0],[121,0,17,0],[122,0,18,0],[123,0,19,0],[124,0,20,0],[125,2,21,7],[125,6,21,13,"updateId"],[125,14,21,21],[125,17,21,24,"ExpoUpdates"],[125,28,21,35],[125,29,21,35,"default"],[125,36,21,35],[125,37,21,36,"updateId"],[125,45,21,44],[125,49,21,48],[125,56,21,55,"ExpoUpdates"],[125,67,21,66],[125,68,21,66,"default"],[125,75,21,66],[125,76,21,67,"updateId"],[125,84,21,75],[125,89,21,80],[125,97,21,88],[125,100,22,6,"ExpoUpdates"],[125,111,22,17],[125,112,22,17,"default"],[125,119,22,17],[125,120,22,18,"updateId"],[125,128,22,26],[125,129,22,27,"toLowerCase"],[125,140,22,38],[125,141,22,39],[125,142,22,40],[125,145,23,6],[125,149,23,10],[126,2,24,0],[127,0,25,0],[128,0,26,0],[129,0,27,0],[130,0,28,0],[131,2,29,7],[131,6,29,13,"channel"],[131,13,29,20],[131,16,29,23,"ExpoUpdates"],[131,27,29,34],[131,28,29,34,"default"],[131,35,29,34],[131,36,29,35,"channel"],[131,43,29,42],[131,47,29,46],[131,51,29,50],[132,2,30,0],[133,0,31,0],[134,0,32,0],[135,2,33,7],[135,6,33,13,"runtimeVersion"],[135,20,33,27],[135,23,33,30,"ExpoUpdates"],[135,34,33,41],[135,35,33,41,"default"],[135,42,33,41],[135,43,33,42,"runtimeVersion"],[135,57,33,56],[135,61,33,60],[135,65,33,64],[136,2,34,0],[136,6,34,6,"_checkAutomaticallyMapNativeToJS"],[136,38,34,38],[136,41,34,41],[137,4,35,4,"ALWAYS"],[137,10,35,10],[137,12,35,12,"UpdatesCheckAutomaticallyValue"],[137,25,35,42],[137,26,35,42,"UpdatesCheckAutomaticallyValue"],[137,56,35,42],[137,57,35,43,"ON_LOAD"],[137,64,35,50],[138,4,36,4,"ERROR_RECOVERY_ONLY"],[138,23,36,23],[138,25,36,25,"UpdatesCheckAutomaticallyValue"],[138,38,36,55],[138,39,36,55,"UpdatesCheckAutomaticallyValue"],[138,69,36,55],[138,70,36,56,"ON_ERROR_RECOVERY"],[138,87,36,73],[139,4,37,4,"NEVER"],[139,9,37,9],[139,11,37,11,"UpdatesCheckAutomaticallyValue"],[139,24,37,41],[139,25,37,41,"UpdatesCheckAutomaticallyValue"],[139,55,37,41],[139,56,37,42,"NEVER"],[139,61,37,47],[140,4,38,4,"WIFI_ONLY"],[140,13,38,13],[140,15,38,15,"UpdatesCheckAutomaticallyValue"],[140,28,38,45],[140,29,38,45,"UpdatesCheckAutomaticallyValue"],[140,59,38,45],[140,60,38,46,"WIFI_ONLY"],[141,2,39,0],[141,3,39,1],[142,2,40,0],[143,0,41,0],[144,0,42,0],[145,2,43,7],[145,6,43,13,"checkAutomatically"],[145,24,43,31],[145,27,43,34,"_checkAutomaticallyMapNativeToJS"],[145,59,43,66],[145,60,43,67,"ExpoUpdates"],[145,71,43,78],[145,72,43,78,"default"],[145,79,43,78],[145,80,43,79,"checkAutomatically"],[145,98,43,97],[145,99,43,98],[145,103,43,102],[145,107,43,106],[146,2,44,0],[147,2,45,0],[148,0,46,0],[149,0,47,0],[150,2,48,7],[150,6,48,13,"localAssets"],[150,17,48,24],[150,20,48,27,"ExpoUpdates"],[150,31,48,38],[150,32,48,38,"default"],[150,39,48,38],[150,40,48,39,"localAssets"],[150,51,48,50],[150,55,48,54],[150,56,48,55],[150,57,48,56],[151,2,49,0],[152,0,50,0],[153,0,51,0],[154,0,52,0],[155,0,53,0],[156,0,54,0],[157,0,55,0],[158,0,56,0],[159,0,57,0],[160,2,58,7],[160,6,58,13,"isEmergencyLaunch"],[160,23,58,30],[160,26,58,33,"ExpoUpdates"],[160,37,58,44],[160,38,58,44,"default"],[160,45,58,44],[160,46,58,45,"isEmergencyLaunch"],[160,63,58,62],[161,2,59,0],[162,0,60,0],[163,0,61,0],[164,0,62,0],[165,2,63,7],[165,6,63,13,"emergencyLaunchReason"],[165,27,63,34],[165,30,63,37,"ExpoUpdates"],[165,41,63,48],[165,42,63,48,"default"],[165,49,63,48],[165,50,63,49,"emergencyLaunchReason"],[165,71,63,70],[166,2,64,0],[167,0,65,0],[168,0,66,0],[169,2,67,7],[169,6,67,13,"launchDuration"],[169,20,67,27],[169,23,67,30,"ExpoUpdates"],[169,34,67,41],[169,35,67,41,"default"],[169,42,67,41],[169,43,67,42,"launchDuration"],[169,57,67,56],[170,2,68,0],[171,0,69,0],[172,0,70,0],[173,0,71,0],[174,2,72,7],[174,6,72,13,"isEmbeddedLaunch"],[174,22,72,29],[174,25,72,32,"ExpoUpdates"],[174,36,72,43],[174,37,72,43,"default"],[174,44,72,43],[174,45,72,44,"isEmbeddedLaunch"],[174,61,72,60],[174,65,72,64],[174,70,72,69],[175,2,73,0],[176,2,74,0],[177,0,75,0],[178,0,76,0],[179,2,77,7],[179,6,77,13,"isUsingEmbeddedAssets"],[179,27,77,34],[179,30,77,37,"ExpoUpdates"],[179,41,77,48],[179,42,77,48,"default"],[179,49,77,48],[179,50,77,49,"isUsingEmbeddedAssets"],[179,71,77,70],[179,75,77,74],[179,80,77,79],[180,2,78,0],[181,0,79,0],[182,0,80,0],[183,0,81,0],[184,0,82,0],[185,0,83,0],[186,0,84,0],[187,0,85,0],[188,0,86,0],[189,2,87,7],[189,6,87,13,"manifest"],[189,14,87,21],[189,17,87,24],[189,18,87,25,"ExpoUpdates"],[189,29,87,36],[189,30,87,36,"default"],[189,37,87,36],[189,38,87,37,"manifestString"],[189,52,87,51],[189,55,87,54,"JSON"],[189,59,87,58],[189,60,87,59,"parse"],[189,65,87,64],[189,66,87,65,"ExpoUpdates"],[189,77,87,76],[189,78,87,76,"default"],[189,85,87,76],[189,86,87,77,"manifestString"],[189,100,87,91],[189,101,87,92],[189,104,87,95,"ExpoUpdates"],[189,115,87,106],[189,116,87,106,"default"],[189,123,87,106],[189,124,87,107,"manifest"],[189,132,87,115],[189,137,88,4],[189,138,88,5],[189,139,88,6],[190,2,89,0],[191,0,90,0],[192,0,91,0],[193,0,92,0],[194,0,93,0],[195,0,94,0],[196,2,95,7],[196,6,95,13,"createdAt"],[196,15,95,22],[196,18,95,25,"ExpoUpdates"],[196,29,95,36],[196,30,95,36,"default"],[196,37,95,36],[196,38,95,37,"commitTime"],[196,48,95,47],[196,51,96,6],[196,55,96,10,"Date"],[196,59,96,14],[196,60,96,15,"ExpoUpdates"],[196,71,96,26],[196,72,96,26,"default"],[196,79,96,26],[196,80,96,27,"commitTime"],[196,90,96,37],[196,91,96,38],[196,94,97,6],[196,98,97,10],[197,2,98,0],[198,0,99,0],[199,0,100,0],[200,0,101,0],[201,0,102,0],[202,2,103,0],[202,6,103,6,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[202,62,103,62],[202,65,103,65],[202,66,103,66],[202,67,103,67,"ExpoUpdates"],[202,78,103,78],[202,79,103,78,"default"],[202,86,103,78],[202,87,103,79,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[202,143,103,135],[203,2,104,0],[204,0,105,0],[205,0,106,0],[206,2,107,0],[206,6,107,6,"isUsingDeveloperTool"],[206,26,107,26],[206,29,107,29],[206,36,107,36],[206,40,107,40,"manifest"],[206,48,107,48],[206,51,107,51],[206,52,107,52],[206,53,107,53,"manifest"],[206,61,107,61],[206,62,107,62,"extra"],[206,67,107,67],[206,69,107,69,"expoGo"],[206,75,107,75],[206,77,107,77,"developer"],[206,86,107,86],[206,88,107,88,"tool"],[206,92,107,92],[206,95,107,95],[206,100,107,100],[207,2,108,0],[207,6,108,6,"manualUpdatesInstructions"],[207,31,108,31],[207,34,108,34],[207,162,108,162],[207,165,109,4],[207,208,109,47],[208,2,110,0],[209,0,111,0],[210,0,112,0],[211,0,113,0],[212,0,114,0],[213,0,115,0],[214,0,116,0],[215,0,117,0],[216,0,118,0],[217,0,119,0],[218,0,120,0],[219,0,121,0],[220,0,122,0],[221,0,123,0],[222,0,124,0],[223,0,125,0],[224,0,126,0],[225,0,127,0],[226,0,128,0],[227,0,129,0],[228,0,130,0],[229,0,131,0],[230,0,132,0],[231,0,133,0],[232,0,134,0],[233,0,135,0],[234,2,110,0],[234,11,136,22,"reloadAsync"],[234,22,136,33,"reloadAsync"],[234,23,136,33],[235,4,136,33],[235,11,136,33,"_reloadAsync"],[235,23,136,33],[235,24,136,33,"apply"],[235,29,136,33],[235,36,136,33,"arguments"],[235,45,136,33],[236,2,136,33],[237,2,143,0],[238,0,144,0],[239,0,145,0],[240,0,146,0],[241,0,147,0],[242,0,148,0],[243,0,149,0],[244,0,150,0],[245,0,151,0],[246,0,152,0],[247,0,153,0],[248,0,154,0],[249,0,155,0],[250,0,156,0],[251,0,157,0],[252,2,143,0],[252,11,143,0,"_reloadAsync"],[252,24,143,0],[253,4,143,0,"_reloadAsync"],[253,16,143,0],[253,23,143,0,"_asyncToGenerator"],[253,40,143,0],[253,41,143,0,"default"],[253,48,143,0],[253,50,136,7],[253,63,136,36],[254,6,137,4],[254,10,137,8],[254,11,137,9,"__DEV__"],[254,18,137,16],[254,22,137,20,"isUsingDeveloperTool"],[254,42,137,40],[254,47,138,8],[254,48,138,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[254,104,138,65],[254,106,138,67],[255,8,139,8],[255,14,139,14],[255,18,139,18,"CodedError"],[255,34,139,28],[255,35,139,28,"CodedError"],[255,45,139,28],[255,46,139,29],[255,68,139,51],[255,70,139,53],[255,148,139,131,"manualUpdatesInstructions"],[255,173,139,156],[255,175,139,158],[255,176,139,159],[256,6,140,4],[257,6,141,4],[257,12,141,10,"ExpoUpdates"],[257,23,141,21],[257,24,141,21,"default"],[257,31,141,21],[257,32,141,22,"reload"],[257,38,141,28],[257,39,141,29],[257,40,141,30],[258,4,142,0],[258,5,142,1],[259,4,142,1],[259,11,142,1,"_reloadAsync"],[259,23,142,1],[259,24,142,1,"apply"],[259,29,142,1],[259,36,142,1,"arguments"],[259,45,142,1],[260,2,142,1],[261,2,142,1],[261,11,158,22,"checkForUpdateAsync"],[261,30,158,41,"checkForUpdateAsync"],[261,31,158,41],[262,4,158,41],[262,11,158,41,"_checkForUpdateAsync"],[262,31,158,41],[262,32,158,41,"apply"],[262,37,158,41],[262,44,158,41,"arguments"],[262,53,158,41],[263,2,158,41],[264,2,173,0],[265,0,174,0],[266,0,175,0],[267,0,176,0],[268,0,177,0],[269,2,173,0],[269,11,173,0,"_checkForUpdateAsync"],[269,32,173,0],[270,4,173,0,"_checkForUpdateAsync"],[270,24,173,0],[270,31,173,0,"_asyncToGenerator"],[270,48,173,0],[270,49,173,0,"default"],[270,56,173,0],[270,58,158,7],[270,71,158,44],[271,6,159,4],[271,10,159,8],[271,11,159,9,"__DEV__"],[271,18,159,16],[271,22,159,20,"isUsingDeveloperTool"],[271,42,159,40],[271,47,160,8],[271,48,160,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[271,104,160,65],[271,106,160,67],[272,8,161,8],[272,14,161,14],[272,18,161,18,"CodedError"],[272,34,161,28],[272,35,161,28,"CodedError"],[272,45,161,28],[272,46,161,29],[272,68,161,51],[272,70,161,53],[272,123,161,106,"manualUpdatesInstructions"],[272,148,161,131],[272,150,161,133],[272,151,161,134],[273,6,162,4],[274,6,163,4],[274,10,163,10,"result"],[274,16,163,16],[274,25,163,25,"ExpoUpdates"],[274,36,163,36],[274,37,163,36,"default"],[274,44,163,36],[274,45,163,37,"checkForUpdateAsync"],[274,64,163,56],[274,65,163,57],[274,66,163,58],[275,6,164,4],[275,10,164,8],[275,26,164,24],[275,30,164,28,"result"],[275,36,164,34],[275,38,164,36],[276,8,165,8],[276,12,165,16,"manifestString"],[276,26,165,30],[276,29,165,44,"result"],[276,35,165,50],[276,36,165,16,"manifestString"],[276,50,165,30],[277,10,165,35,"rest"],[277,14,165,39],[277,21,165,39,"_objectWithoutProperties"],[277,45,165,39],[277,46,165,39,"default"],[277,53,165,39],[277,55,165,44,"result"],[277,61,165,50],[277,63,165,50,"_excluded"],[277,72,165,50],[278,8,166,8],[278,15,166,15],[279,10,167,12],[279,13,167,15,"rest"],[279,17,167,19],[280,10,168,12,"manifest"],[280,18,168,20],[280,20,168,22,"JSON"],[280,24,168,26],[280,25,168,27,"parse"],[280,30,168,32],[280,31,168,33,"manifestString"],[280,45,168,47],[281,8,169,8],[281,9,169,9],[282,6,170,4],[283,6,171,4],[283,13,171,11,"result"],[283,19,171,17],[284,4,172,0],[284,5,172,1],[285,4,172,1],[285,11,172,1,"_checkForUpdateAsync"],[285,31,172,1],[285,32,172,1,"apply"],[285,37,172,1],[285,44,172,1,"arguments"],[285,53,172,1],[286,2,172,1],[287,2,172,1],[287,11,178,22,"getExtraParamsAsync"],[287,30,178,41,"getExtraParamsAsync"],[287,31,178,41],[288,4,178,41],[288,11,178,41,"_getExtraParamsAsync"],[288,31,178,41],[288,32,178,41,"apply"],[288,37,178,41],[288,44,178,41,"arguments"],[288,53,178,41],[289,2,178,41],[290,2,181,0],[291,0,182,0],[292,0,183,0],[293,0,184,0],[294,0,185,0],[295,0,186,0],[296,0,187,0],[297,2,181,0],[297,11,181,0,"_getExtraParamsAsync"],[297,32,181,0],[298,4,181,0,"_getExtraParamsAsync"],[298,24,181,0],[298,31,181,0,"_asyncToGenerator"],[298,48,181,0],[298,49,181,0,"default"],[298,56,181,0],[298,58,178,7],[298,71,178,44],[299,6,179,4],[299,19,179,17,"ExpoUpdates"],[299,30,179,28],[299,31,179,28,"default"],[299,38,179,28],[299,39,179,29,"getExtraParamsAsync"],[299,58,179,48],[299,59,179,49],[299,60,179,50],[300,4,180,0],[300,5,180,1],[301,4,180,1],[301,11,180,1,"_getExtraParamsAsync"],[301,31,180,1],[301,32,180,1,"apply"],[301,37,180,1],[301,44,180,1,"arguments"],[301,53,180,1],[302,2,180,1],[303,2,180,1],[303,11,188,22,"setExtraParamAsync"],[303,29,188,40,"setExtraParamAsync"],[303,30,188,40,"_x"],[303,32,188,40],[303,34,188,40,"_x2"],[303,37,188,40],[304,4,188,40],[304,11,188,40,"_setExtraParamAsync"],[304,30,188,40],[304,31,188,40,"apply"],[304,36,188,40],[304,43,188,40,"arguments"],[304,52,188,40],[305,2,188,40],[306,2,191,0],[307,0,192,0],[308,0,193,0],[309,0,194,0],[310,0,195,0],[311,0,196,0],[312,0,197,0],[313,0,198,0],[314,0,199,0],[315,2,191,0],[315,11,191,0,"_setExtraParamAsync"],[315,31,191,0],[316,4,191,0,"_setExtraParamAsync"],[316,23,191,0],[316,30,191,0,"_asyncToGenerator"],[316,47,191,0],[316,48,191,0,"default"],[316,55,191,0],[316,57,188,7],[316,68,188,41,"key"],[316,71,188,44],[316,73,188,46,"value"],[316,78,188,51],[316,80,188,53],[317,6,189,4],[317,19,189,17,"ExpoUpdates"],[317,30,189,28],[317,31,189,28,"default"],[317,38,189,28],[317,39,189,29,"setExtraParamAsync"],[317,57,189,47],[317,58,189,48,"key"],[317,61,189,51],[317,63,189,53,"value"],[317,68,189,58],[317,72,189,62],[317,76,189,66],[317,77,189,67],[318,4,190,0],[318,5,190,1],[319,4,190,1],[319,11,190,1,"_setExtraParamAsync"],[319,30,190,1],[319,31,190,1,"apply"],[319,36,190,1],[319,43,190,1,"arguments"],[319,52,190,1],[320,2,190,1],[321,2,190,1],[321,11,200,22,"readLogEntriesAsync"],[321,30,200,41,"readLogEntriesAsync"],[321,31,200,41],[322,4,200,41],[322,11,200,41,"_readLogEntriesAsync"],[322,31,200,41],[322,32,200,41,"apply"],[322,37,200,41],[322,44,200,41,"arguments"],[322,53,200,41],[323,2,200,41],[324,2,203,0],[325,0,204,0],[326,0,205,0],[327,0,206,0],[328,0,207,0],[329,0,208,0],[330,0,209,0],[331,0,210,0],[332,0,211,0],[333,0,212,0],[334,0,213,0],[335,2,203,0],[335,11,203,0,"_readLogEntriesAsync"],[335,32,203,0],[336,4,203,0,"_readLogEntriesAsync"],[336,24,203,0],[336,31,203,0,"_asyncToGenerator"],[336,48,203,0],[336,49,203,0,"default"],[336,56,203,0],[336,58,200,7],[336,71,200,60],[337,6,200,60],[337,10,200,42,"maxAge"],[337,16,200,48],[337,19,200,48,"arguments"],[337,28,200,48],[337,29,200,48,"length"],[337,35,200,48],[337,43,200,48,"arguments"],[337,52,200,48],[337,60,200,48,"undefined"],[337,69,200,48],[337,72,200,48,"arguments"],[337,81,200,48],[337,87,200,51],[337,94,200,58],[338,6,201,4],[338,19,201,17,"ExpoUpdates"],[338,30,201,28],[338,31,201,28,"default"],[338,38,201,28],[338,39,201,29,"readLogEntriesAsync"],[338,58,201,48],[338,59,201,49,"maxAge"],[338,65,201,55],[338,66,201,56],[339,4,202,0],[339,5,202,1],[340,4,202,1],[340,11,202,1,"_readLogEntriesAsync"],[340,31,202,1],[340,32,202,1,"apply"],[340,37,202,1],[340,44,202,1,"arguments"],[340,53,202,1],[341,2,202,1],[342,2,202,1],[342,11,214,22,"clearLogEntriesAsync"],[342,31,214,42,"clearLogEntriesAsync"],[342,32,214,42],[343,4,214,42],[343,11,214,42,"_clearLogEntriesAsync"],[343,32,214,42],[343,33,214,42,"apply"],[343,38,214,42],[343,45,214,42,"arguments"],[343,54,214,42],[344,2,214,42],[345,2,217,0],[346,0,218,0],[347,0,219,0],[348,0,220,0],[349,0,221,0],[350,0,222,0],[351,0,223,0],[352,0,224,0],[353,0,225,0],[354,0,226,0],[355,0,227,0],[356,0,228,0],[357,0,229,0],[358,0,230,0],[359,2,217,0],[359,11,217,0,"_clearLogEntriesAsync"],[359,33,217,0],[360,4,217,0,"_clearLogEntriesAsync"],[360,25,217,0],[360,32,217,0,"_asyncToGenerator"],[360,49,217,0],[360,50,217,0,"default"],[360,57,217,0],[360,59,214,7],[360,72,214,45],[361,6,215,4],[361,12,215,10,"ExpoUpdates"],[361,23,215,21],[361,24,215,21,"default"],[361,31,215,21],[361,32,215,22,"clearLogEntriesAsync"],[361,52,215,42],[361,53,215,43],[361,54,215,44],[362,4,216,0],[362,5,216,1],[363,4,216,1],[363,11,216,1,"_clearLogEntriesAsync"],[363,32,216,1],[363,33,216,1,"apply"],[363,38,216,1],[363,45,216,1,"arguments"],[363,54,216,1],[364,2,216,1],[365,2,216,1],[365,11,231,22,"fetchUpdateAsync"],[365,27,231,38,"fetchUpdateAsync"],[365,28,231,38],[366,4,231,38],[366,11,231,38,"_fetchUpdateAsync"],[366,28,231,38],[366,29,231,38,"apply"],[366,34,231,38],[366,41,231,38,"arguments"],[366,50,231,38],[367,2,231,38],[368,2,246,0],[369,0,247,0],[370,0,248,0],[371,0,249,0],[372,0,250,0],[373,0,251,0],[374,0,252,0],[375,2,246,0],[375,11,246,0,"_fetchUpdateAsync"],[375,29,246,0],[376,4,246,0,"_fetchUpdateAsync"],[376,21,246,0],[376,28,246,0,"_asyncToGenerator"],[376,45,246,0],[376,46,246,0,"default"],[376,53,246,0],[376,55,231,7],[376,68,231,41],[377,6,232,4],[377,10,232,8],[377,11,232,9,"__DEV__"],[377,18,232,16],[377,22,232,20,"isUsingDeveloperTool"],[377,42,232,40],[377,47,233,8],[377,48,233,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[377,104,233,65],[377,106,233,67],[378,8,234,8],[378,14,234,14],[378,18,234,18,"CodedError"],[378,34,234,28],[378,35,234,28,"CodedError"],[378,45,234,28],[378,46,234,29],[378,68,234,51],[378,70,234,53],[378,119,234,102,"manualUpdatesInstructions"],[378,144,234,127],[378,146,234,129],[378,147,234,130],[379,6,235,4],[380,6,236,4],[380,10,236,10,"result"],[380,16,236,16],[380,25,236,25,"ExpoUpdates"],[380,36,236,36],[380,37,236,36,"default"],[380,44,236,36],[380,45,236,37,"fetchUpdateAsync"],[380,61,236,53],[380,62,236,54],[380,63,236,55],[381,6,237,4],[381,10,237,8],[381,26,237,24],[381,30,237,28,"result"],[381,36,237,34],[381,38,237,36],[382,8,238,8],[382,12,238,16,"manifestString"],[382,26,238,30],[382,29,238,44,"result"],[382,35,238,50],[382,36,238,16,"manifestString"],[382,50,238,30],[383,10,238,35,"rest"],[383,14,238,39],[383,21,238,39,"_objectWithoutProperties"],[383,45,238,39],[383,46,238,39,"default"],[383,53,238,39],[383,55,238,44,"result"],[383,61,238,50],[383,63,238,50,"_excluded2"],[383,73,238,50],[384,8,239,8],[384,15,239,15],[385,10,240,12],[385,13,240,15,"rest"],[385,17,240,19],[386,10,241,12,"manifest"],[386,18,241,20],[386,20,241,22,"JSON"],[386,24,241,26],[386,25,241,27,"parse"],[386,30,241,32],[386,31,241,33,"manifestString"],[386,45,241,47],[387,8,242,8],[387,9,242,9],[388,6,243,4],[389,6,244,4],[389,13,244,11,"result"],[389,19,244,17],[390,4,245,0],[390,5,245,1],[391,4,245,1],[391,11,245,1,"_fetchUpdateAsync"],[391,28,245,1],[391,29,245,1,"apply"],[391,34,245,1],[391,41,245,1,"arguments"],[391,50,245,1],[392,2,245,1],[393,2,253,7],[393,11,253,16,"setUpdateURLAndRequestHeadersOverride"],[393,48,253,53,"setUpdateURLAndRequestHeadersOverride"],[393,49,253,54,"configOverride"],[393,63,253,68],[393,65,253,70],[394,4,254,4,"ExpoUpdates"],[394,15,254,15],[394,16,254,15,"default"],[394,23,254,15],[394,24,254,16,"setUpdateURLAndRequestHeadersOverride"],[394,61,254,53],[394,62,254,54,"configOverride"],[394,76,254,68],[394,77,254,69],[395,2,255,0],[396,0,255,1],[396,3]],"functionMap":{"names":["<global>","reloadAsync","checkForUpdateAsync","getExtraParamsAsync","setExtraParamAsync","readLogEntriesAsync","clearLogEntriesAsync","fetchUpdateAsync","setUpdateURLAndRequestHeadersOverride"],"mappings":"AAA;OCuI;CDM;OEgB;CFc;OGM;CHE;OIQ;CJE;OKU;CLE;OMY;CNE;OOe;CPc;OQQ;CRE"},"hasCjsExports":false},"type":"js/module"}]}